#include "test.h"
#include "crypto.h"
#include "string.h"

TEST_CASE("aes 256")
{
    unsigned char plaintext[16] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};
    unsigned char key[32] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f};
    unsigned char testvector[16] = {0x8e, 0xa2, 0xb7, 0xca, 0x51, 0x67, 0x45, 0xbf, 0xea, 0xfc, 0x49, 0x90, 0x4b, 0x49, 0x60, 0x89};
    
    unsigned char ciphertext[16];
    unsigned char decrypted[16];
    
    crypto::aes::ecb::encrypt(plaintext, ciphertext, 16, key, 256);
    crypto::aes::ecb::decrypt(ciphertext, decrypted, 16, key, 256);

    REQUIRE(memcmp(ciphertext, testvector, 16) == 0);
    REQUIRE(memcmp(plaintext, decrypted, 16) == 0);
}

TEST_CASE("aes256cbc")
{
    unsigned char plaintext[32] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff,
                                   0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};

    unsigned char key[32] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f};
    unsigned char iv[] = {0x4c, 0x6a, 0x60, 0x6a, 0x90, 0xbd, 0x84, 0xc0, 0x40, 0x2e, 0xe2, 0xa8, 0x17, 0x83, 0xd6, 0xe8};
    unsigned char testvector[32] = {0x58, 0x70, 0x6e, 0x4e, 0xb5, 0x41, 0xc3, 0x78, 0x78, 0x10, 0xbc, 0xca, 0x76, 0x8d, 0xf8, 0xe1,
                                    0x75, 0xdb, 0x0f, 0xdd, 0x47, 0x85, 0x2e, 0xd6, 0xa3, 0xee, 0x7d, 0x6d, 0x7c, 0x61, 0xd9, 0x3e};

    unsigned char ciphertext[32];
    unsigned char decrypted[32];

    crypto::aes::cbc::encrypt(plaintext, ciphertext, 32, key, 256, iv);
    crypto::aes::cbc::decrypt(ciphertext, decrypted, 32, key, 256, iv);

    REQUIRE(memcmp(ciphertext, testvector, 32) == 0);
    REQUIRE(memcmp(plaintext, decrypted, 32) == 0);
}